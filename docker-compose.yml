version: '3.8'

networks:
  database:
    internal: false
  api:
    internal: false
  monit:
  proxy:

services:
  postgres:
    image: postgres:16.0
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: observableApp
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - database
    volumes:
      - postgres_data:/var/lib/postgresql/data

  observable-app-api:
    build:
      context: ./
      dockerfile: Dockerfile
    image: observable-app-api
    container_name: observable-app-api
    restart: unless-stopped
    networks:
      - api
      - database
    depends_on:
      - postgres
    environment:
      DATABASE_URL: 123
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl -sS http://app-forum-api:8080/actuator/health"
      interval: 1s
      timeout: 30s
      retries: 60

  proxy-observable-app-api:
    image: nginx
    container_name: proxy-observable-app-api
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf
    ports:
      - 80:80
    networks:
      - proxy
      - api
    depends_on:
      - observable-app-api

  prometheus-observable-app:
    image: prom/prometheus:latest
    container_name: prometheus-observable-app
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monit
      - api
    depends_on:
      - proxy-observable-app-api
    user: root

  grafana-observable-app:
    image: grafana/grafana
    container_name: grafana-observable-app
    volumes:
      - ./grafana:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - monit
    user: root

volumes:
  postgres_data:
